name: Build and Push Docker Image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Log in to GitHub Container Registry
      run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Switch Docker to Windows containers
      run: |
        # List available contexts
        docker context ls
        # Create a new context for Windows containers if it doesn't exist
        if (-not (docker context ls --format "{{.Name}}" | Where-Object { $_ -eq "default-windows" })) {
          docker context create default-windows --docker "host=npipe:////./pipe/docker_engine"
        }
        # Switch to the Windows context
        docker context use default-windows

    - name: Ensure Docker is using Windows containers
      run: |
        # Check if Docker is using Windows containers
        $dockerInfo = docker info --format "{{.OSType}}"
        if ($dockerInfo -ne "windows") {
          Write-Host "Docker is not using Windows containers. This should not happen on a Windows runner."
          exit 1
        }

    - name: Extract Qt files
      run: |
        # 解压分卷文件
        7z x 3rd/qt/Qt.7z.001 -o. -y

    - name: Build Docker image
      run: |
        $timestamp = Get-Date -Format "yyyyMMddHHmmss"
        $imageTag = "ghcr.io/${{ github.repository }}/qt550-mingw492-cmake-nuget:$timestamp"
        $latestTag = "ghcr.io/${{ github.repository }}/qt550-mingw492-cmake-nuget:latest"
        docker build -t $imageTag -t $latestTag .

    - name: Push Docker image
      run: |
        $timestamp = Get-Date -Format "yyyyMMddHHmmss"
        $imageTag = "ghcr.io/${{ github.repository }}/qt550-mingw492-cmake-nuget:$timestamp"
        $latestTag = "ghcr.io/${{ github.repository }}/qt550-mingw492-cmake-nuget:latest"
        docker push $imageTag
        docker push $latestTag
